{"mappings":"AAEE,MAAIA,EAAQ,CACZ,CACEC,UAAW,IACXC,QAAS,OACTC,KAAM,IACNC,UAAW,GAEb,CACEH,UAAW,MACXC,QAAS,OACTC,KAAM,GACNC,UAAW,OAEb,CACEH,UAAW,KACXC,QAAS,OACTC,KAAM,GACNC,UAAW,QAEb,CACEH,UAAW,MACXC,QAAS,OACTC,KAAM,IACNC,UAAW,OAEb,CACEH,UAAW,IACXC,QAAS,QACTC,KAAM,IACNC,UAAW,QAEb,CACEH,UAAW,KACXC,QAAS,QACTC,KAAM,GACNC,UAAW,QAEb,CACEH,UAAW,IACXC,QAASG,IACTF,KAAM,IACNC,UAAW,SAOFE,EAAiBC,IAC5B,MAAMC,EAA4C,IAA5BC,KAAKC,MAAMH,EAAS,KAE1C,IAAK,MAAMI,KAAOX,EAChB,GAAIW,EAAIV,WAAaO,GAAiBA,GAAiBG,EAAIT,QACzD,OAAOM,EAAgBG,EAAIR,KAAOQ,EAAIP,UAI1C,OAAO,GCzDHQ,EAAUC,SAASC,eAAe,UAClCC,EAAaF,SAASC,eAAe,aAE3CF,EAAQI,iBAAiB,SAAUC,IACjC,MAAMV,EAASW,OACbD,EAAOE,OAA4BC,MAAMC,WAAW,IAAK,KAErDC,EAAYhB,EAAcC,GAChCQ,EAAWQ,YAAcD,EAAUE","sources":["src/202206-income-tax/calcIncomeTax/index.ts","src/202206-income-tax/index.ts"],"sourcesContent":["// ☞ https://www.nta.go.jp/taxes/shiraberu/taxanswer/shotoku/2260.htm\n\nconst table = [\n  {\n    rangeFrom: 1_000,\n    rangeTo: 1_949_000,\n    rate: 0.05,\n    deduction: 0,\n  },\n  {\n    rangeFrom: 1_950_000,\n    rangeTo: 3_299_000,\n    rate: 0.1,\n    deduction: 97_500,\n  },\n  {\n    rangeFrom: 3_300_000,\n    rangeTo: 6_949_000,\n    rate: 0.2,\n    deduction: 427_500,\n  },\n  {\n    rangeFrom: 6_950_000,\n    rangeTo: 8_999_000,\n    rate: 0.23,\n    deduction: 636_000,\n  },\n  {\n    rangeFrom: 9_000_000,\n    rangeTo: 17_999_000,\n    rate: 0.33,\n    deduction: 1_536_000,\n  },\n  {\n    rangeFrom: 18_000_000,\n    rangeTo: 39_999_000,\n    rate: 0.4,\n    deduction: 2_796_000,\n  },\n  {\n    rangeFrom: 40_000_000,\n    rangeTo: Infinity,\n    rate: 0.45,\n    deduction: 4_796_000,\n  },\n]\n\n/**\n * 所得税の計算をする関数\n */\nexport const calcIncomeTax = (income: number): number => {\n  const roundedIncome = Math.floor(income / 1000) * 1000\n\n  for (const row of table) {\n    if (row.rangeFrom <= roundedIncome && roundedIncome <= row.rangeTo) {\n      return roundedIncome * row.rate - row.deduction\n    }\n  }\n\n  return 0\n}\n","import { calcIncomeTax } from \"./calcIncomeTax\"\n\nconst $income = document.getElementById(\"income\") as HTMLInputElement\nconst $incomeTax = document.getElementById(\"incomeTax\") as HTMLSpanElement\n\n$income.addEventListener(\"input\", (event) => {\n  const income = Number(\n    (event.target as HTMLInputElement).value.replaceAll(\",\", \"\"),\n  )\n  const incomeTax = calcIncomeTax(income)\n  $incomeTax.textContent = incomeTax.toLocaleString()\n})\n"],"names":["$1f10dc940034afb9$var$table","rangeFrom","rangeTo","rate","deduction","Infinity","$1f10dc940034afb9$export$7a221f638b29a157","income","roundedIncome","Math","floor","row","$f85701152f3c3d07$var$$income","document","getElementById","$f85701152f3c3d07$var$$incomeTax","addEventListener","event","Number","target","value","replaceAll","incomeTax","textContent","toLocaleString"],"version":3,"file":"index.8310258d.js.map"}